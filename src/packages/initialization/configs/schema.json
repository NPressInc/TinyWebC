{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://tinyweb.network/schemas/network-config.json",
  "title": "Network Configuration",
  "description": "Configuration schema for initializing a TinyWeb blockchain network",
  "type": "object",
  "required": ["network", "storage", "nodes", "users"],
  "properties": {
    "network": {
      "type": "object",
      "required": ["name", "base_port"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Human-readable name for the network"
        },
        "description": {
          "type": "string",
          "maxLength": 500,
          "description": "Optional description of the network"
        },
        "type": {
          "type": "string",
          "enum": ["family", "corporate", "educational", "community", "gaming", "custom"],
          "default": "custom",
          "description": "Type of organization this network serves"
        },
        "base_port": {
          "type": "integer",
          "minimum": 1024,
          "maximum": 65535,
          "description": "Base port number for network nodes"
        },
        "max_connections": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10,
          "description": "Maximum number of peer connections"
        }
      }
    },
    "storage": {
      "type": "object",
      "required": ["keystore_path", "blockchain_path", "passphrase"],
      "properties": {
        "keystore_path": {
          "type": "string",
          "pattern": "^[^\\0]+/$",
          "description": "Directory path for storing cryptographic keys"
        },
        "blockchain_path": {
          "type": "string", 
          "pattern": "^[^\\0]+/$",
          "description": "Directory path for storing blockchain data"
        },
        "passphrase": {
          "type": "string",
          "minLength": 8,
          "maxLength": 128,
          "description": "Passphrase for encrypting stored keys"
        }
      }
    },
    "nodes": {
      "type": "array",
      "minItems": 1,
      "maxItems": 10,
      "items": {
        "type": "object",
        "required": ["id", "name", "type", "ip", "port"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^node_[0-9]{3}$",
            "description": "Unique identifier for the node"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "Human-readable name for the node"
          },
          "type": {
            "type": "string",
            "enum": ["primary", "backup", "validator"],
            "description": "Type of node in the network"
          },
          "ip": {
            "type": "string",
            "format": "ipv4",
            "description": "IP address of the node"
          },
          "port": {
            "type": "integer",
            "minimum": 1024,
            "maximum": 65535,
            "description": "Port number for the node"
          },
          "is_validator": {
            "type": "boolean",
            "default": true,
            "description": "Whether this node participates in consensus"
          }
        }
      }
    },
    "users": {
      "type": "object",
      "required": ["admins", "members"],
      "properties": {
        "admins": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/admin"
          }
        },
        "members": {
          "type": "array",
          "minItems": 0,
          "maxItems": 50,
          "items": {
            "$ref": "#/definitions/member"
          }
        },
        "contacts": {
          "type": "array",
          "minItems": 0,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/contact"
          }
        }
      }
    },
    "security": {
      "type": "object",
      "properties": {
        "encryption": {
          "type": "object",
          "properties": {
            "algorithm": {
              "type": "string",
              "enum": ["Ed25519", "RSA-2048", "RSA-4096"],
              "default": "Ed25519"
            },
            "key_rotation_days": {
              "type": "integer",
              "minimum": 1,
              "maximum": 365,
              "default": 90
            }
          }
        },
        "content_filtering": {
          "type": "object",
          "properties": {
            "default_policy": {
              "type": "string",
              "enum": ["allow_all", "block_unknown", "admin_approval"],
              "default": "block_unknown"
            },
            "categories": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "enum": ["allow", "block", "allow_with_limits", "admin_approval", "time_limited"]
              }
            }
          }
        }
      }
    },
    "features": {
      "type": "object",
      "properties": {
        "messaging": {
          "type": "object",
          "additionalProperties": {"type": "boolean"}
        },
        "location": {
          "type": "object", 
          "additionalProperties": {"type": "boolean"}
        },
        "content": {
          "type": "object",
          "additionalProperties": {"type": "boolean"}
        }
      }
    },
    "initial_transactions": {
      "type": "object",
      "additionalProperties": {"type": "boolean"}
    }
  },
  "definitions": {
    "admin": {
      "type": "object",
      "required": ["id", "name", "role"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^admin_[0-9]{3}$"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "role": {
          "type": "string",
          "enum": ["admin"]
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Optional email for external communication"
        }
      }
    },
    "member": {
      "type": "object", 
      "required": ["id", "name", "role"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^member_[0-9]{3}$"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "role": {
          "type": "string",
          "enum": ["member"]
        },
        "age": {
          "type": "integer",
          "minimum": 0,
          "maximum": 150
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Optional email for external communication"
        },
        "supervised_by": {
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string",
            "pattern": "^admin_[0-9]{3}$"
          }
        }
      }
    },
    "contact": {
      "type": "object",
      "required": ["id", "name", "role"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^contact_[0-9]{3}$"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "role": {
          "type": "string",
          "enum": ["contact", "peer", "friend", "colleague", "external"]
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "organization": {
          "type": "string",
          "maxLength": 100
        },
        "trusted": {
          "type": "boolean",
          "default": false
        }
      }
    }
  }
} 